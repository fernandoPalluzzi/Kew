# FUNCTION: fetch

# DESCRIPTION
Build a query and fetch data in a tab-separated text file.
The input can be either a text file or an SQLite database.

# USAGE WITH TEXT FILE
kew.py fetch <input> -f [-s <attributes>] [-c <condition>] [options]

# USAGE WITH SQLite DB
kew.py fetch <input.idb> -t <table> [-s <attributes>] [-c <condition>] [options]

# ARGUMENTS
# -t     Database table to be queried.
# -s     Comma + space-separated table attributes to be returned (-s "attr1, attr2, ..., attrN").
# -c     Condition on tuples (-c "...").
# -i     An attribute:ID_list string (attribute:ID_list_file).
#        The ID list should be given as a text file with only one ID per line.
#        If ID_list_file is a directory, a recursive query will be performed.
#        Every output file of the recursive query will have .map extension.
# -ord   Comma + space-separated table attributes to order by (-ord "attr1, attr2, ..., attrN").
#        This will sort data according to the specified attributes, in ascending order.
#        For descending order, write DESC after the parameter argument
#        (-ord "attr1, attr2, ..., attrN DESC").
# -o     Output path. If None, the output will be set automatically to 
#        basename(<index_db>)_fetched.txt
# -e     Exclude IDs in -i. Use with -i only.
# -f     Disable warnings (for automatic usage).
#        Use this option if the input is a tab-separated txt file, instead of an SQlite database.
# -time  Show elapsed time.
# -v     Suppress display output.
